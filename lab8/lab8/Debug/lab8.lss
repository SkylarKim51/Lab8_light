
lab8.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000174  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000120  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000174  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001a4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000887  00000000  00000000  0000020c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007cb  00000000  00000000  00000a93  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002d4  00000000  00000000  0000125e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001534  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000404  00000000  00000000  00001568  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000018  00000000  00000000  0000196c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	08 d0       	rcall	.+16     	; 0xaa <main>
  9a:	40 c0       	rjmp	.+128    	; 0x11c <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <ADC_init>:
 */ 

#include <avr/io.h>

void ADC_init(){
	ADCSRA |= (1 << ADEN) | (1 << ADSC) | (1 << ADATE);
  9e:	ea e7       	ldi	r30, 0x7A	; 122
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	80 81       	ld	r24, Z
  a4:	80 6e       	ori	r24, 0xE0	; 224
  a6:	80 83       	st	Z, r24
  a8:	08 95       	ret

000000aa <main>:
}
int main(void)
{
   	DDRA = 0x00; PORTA = 0xFF; 
  aa:	11 b8       	out	0x01, r1	; 1
  ac:	8f ef       	ldi	r24, 0xFF	; 255
  ae:	82 b9       	out	0x02, r24	; 2
    DDRB = 0xFF; PORTB = 0x00; 
  b0:	84 b9       	out	0x04, r24	; 4
  b2:	15 b8       	out	0x05, r1	; 5
    DDRD = 0xFF; PORTD = 0x00;
  b4:	8a b9       	out	0x0a, r24	; 10
  b6:	1b b8       	out	0x0b, r1	; 11
	
	ADC_init();
  b8:	f2 df       	rcall	.-28     	; 0x9e <ADC_init>
    while (1) 
    {
		unsigned long max = 780;
		unsigned short temp = ADC;
  ba:	e8 e7       	ldi	r30, 0x78	; 120
  bc:	f0 e0       	ldi	r31, 0x00	; 0
		if(temp < (max/8)){
			PORTB = 0x00;
		}
		max = x;
		if(temp >= (max/8)){
			PORTB = 0x01;
  be:	a1 e0       	ldi	r26, 0x01	; 1
		}
		max = x;
		if(temp >= (max/7)){
			PORTB = 0x03;
  c0:	73 e0       	ldi	r23, 0x03	; 3
		}
		max = x;
		if(temp >= (max/6)){
			PORTB = 0x07;
  c2:	67 e0       	ldi	r22, 0x07	; 7
		}
		max = x;
		if(temp >= (max/5)){
			PORTB = 0x0F;
  c4:	5f e0       	ldi	r21, 0x0F	; 15
		}
		max = x;
		if(temp >= (max/4)){
			PORTB = 0x1F;
  c6:	4f e1       	ldi	r20, 0x1F	; 31
		}
		max = x;
		if(temp >= (max/3)){
			PORTB = 0x3F;
  c8:	3f e3       	ldi	r19, 0x3F	; 63
		}
		max = x;
		if(temp >= (max/2)){
			PORTB = 0x7F;
  ca:	2f e7       	ldi	r18, 0x7F	; 127
		}
		max = x;
		if(temp >= max){
			PORTB = 0xFF;
  cc:	bf ef       	ldi	r27, 0xFF	; 255
	
	ADC_init();
    while (1) 
    {
		unsigned long max = 780;
		unsigned short temp = ADC;
  ce:	80 81       	ld	r24, Z
  d0:	91 81       	ldd	r25, Z+1	; 0x01
		unsigned short x = max;
		if(temp < (max/8)){
  d2:	81 36       	cpi	r24, 0x61	; 97
  d4:	91 05       	cpc	r25, r1
  d6:	00 f5       	brcc	.+64     	; 0x118 <main+0x6e>
			PORTB = 0x00;
  d8:	15 b8       	out	0x05, r1	; 5
		max = x;
		if(temp >= (max/8)){
			PORTB = 0x01;
		}
		max = x;
		if(temp >= (max/7)){
  da:	8f 36       	cpi	r24, 0x6F	; 111
  dc:	91 05       	cpc	r25, r1
  de:	08 f0       	brcs	.+2      	; 0xe2 <main+0x38>
			PORTB = 0x03;
  e0:	75 b9       	out	0x05, r23	; 5
		}
		max = x;
		if(temp >= (max/6)){
  e2:	82 38       	cpi	r24, 0x82	; 130
  e4:	91 05       	cpc	r25, r1
  e6:	08 f0       	brcs	.+2      	; 0xea <main+0x40>
			PORTB = 0x07;
  e8:	65 b9       	out	0x05, r22	; 5
		}
		max = x;
		if(temp >= (max/5)){
  ea:	8c 39       	cpi	r24, 0x9C	; 156
  ec:	91 05       	cpc	r25, r1
  ee:	08 f0       	brcs	.+2      	; 0xf2 <main+0x48>
			PORTB = 0x0F;
  f0:	55 b9       	out	0x05, r21	; 5
		}
		max = x;
		if(temp >= (max/4)){
  f2:	83 3c       	cpi	r24, 0xC3	; 195
  f4:	91 05       	cpc	r25, r1
  f6:	08 f0       	brcs	.+2      	; 0xfa <main+0x50>
			PORTB = 0x1F;
  f8:	45 b9       	out	0x05, r20	; 5
		}
		max = x;
		if(temp >= (max/3)){
  fa:	84 30       	cpi	r24, 0x04	; 4
  fc:	c1 e0       	ldi	r28, 0x01	; 1
  fe:	9c 07       	cpc	r25, r28
 100:	08 f0       	brcs	.+2      	; 0x104 <main+0x5a>
			PORTB = 0x3F;
 102:	35 b9       	out	0x05, r19	; 5
		}
		max = x;
		if(temp >= (max/2)){
 104:	86 38       	cpi	r24, 0x86	; 134
 106:	c1 e0       	ldi	r28, 0x01	; 1
 108:	9c 07       	cpc	r25, r28
 10a:	08 f0       	brcs	.+2      	; 0x10e <main+0x64>
			PORTB = 0x7F;
 10c:	25 b9       	out	0x05, r18	; 5
		}
		max = x;
		if(temp >= max){
 10e:	8c 30       	cpi	r24, 0x0C	; 12
 110:	93 40       	sbci	r25, 0x03	; 3
 112:	e8 f2       	brcs	.-70     	; 0xce <main+0x24>
			PORTB = 0xFF;
 114:	b5 b9       	out	0x05, r27	; 5
 116:	db cf       	rjmp	.-74     	; 0xce <main+0x24>
		if(temp < (max/8)){
			PORTB = 0x00;
		}
		max = x;
		if(temp >= (max/8)){
			PORTB = 0x01;
 118:	a5 b9       	out	0x05, r26	; 5
 11a:	df cf       	rjmp	.-66     	; 0xda <main+0x30>

0000011c <_exit>:
 11c:	f8 94       	cli

0000011e <__stop_program>:
 11e:	ff cf       	rjmp	.-2      	; 0x11e <__stop_program>
